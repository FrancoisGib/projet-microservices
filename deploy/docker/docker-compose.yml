services:
  postgres:
    image: postgres:16.3-alpine
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - postgres-network

  rabbitmq:
    image: rabbitmq:3-management
    healthcheck:
      test: rabbitmq-diagnostics -q status && rabbitmq-diagnostics -q check_local_alarms
      interval: 3s
      retries: 10
    networks:
      - rabbitmq-network

  api-gateway:
    build:
      dockerfile: ./api-gateway/Dockerfile
    environment:
      ENVIRONMENT: dev-docker
    scale: 1
    ports:
      - 9000:9000
      #- 9000-9010:9000
    networks:
      - gateway-network
    depends_on:
      eureka-server:
        condition: service_started

  project-service:
    build:
      dockerfile: ./project-service/Dockerfile
    environment:
      ENVIRONMENT: dev-docker
      POSTGRES_URL: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    depends_on:
      postgres:
        condition: service_started
      logs-service:
        condition: service_started
      eureka-server:
        condition: service_started
    networks:
      - gateway-network
      - mongo-network
      - rabbitmq-network

  user-service:
    build:
      dockerfile: ./user-service/Dockerfile
    environment:
      ENVIRONMENT: dev-docker
      POSTGRES_URL: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      RABBITMQ_HOST: rabbitmq
    depends_on:
      postgres:
        condition: service_started
      logs-service:
        condition: service_started
      eureka-server:
        condition: service_started
    networks:
      - gateway-network
      - postgres-network
      - rabbitmq-network

  logs-service:
    build:
      dockerfile: ./logs-service/Dockerfile
    environment:
      LOG_PATH: logback.log
      RABBITMQ_HOST: rabbitmq
    volumes:
      - ./data/logs:/app/logs
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - rabbitmq-network

  docker-registry:
    image: registry
    volumes:
      - ./data/auth:/auth
    environment:
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
      HTTP_PROXY: http://api-gateway:9000
    networks:
      - gateway-network

  eureka-server:
    image: ygqygq2/eureka-server
    networks:
      - gateway-network
    ports:
      - 8761:8761

  #docker-dind:
  #  image: docker:dind

  #docker-service:
  #  build:
  #    dockerfile: ./docker-service/Dockerfile
  #  ports:
  #    - 8083:8083

networks:
  rabbitmq-network:
  postgres-network:
  mongo-network:
  gateway-network: